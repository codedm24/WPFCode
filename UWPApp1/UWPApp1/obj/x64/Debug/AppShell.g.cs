#pragma checksum "F:\Projects\Windows\UWPApp1\UWPApp1\AppShell.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "CF82C21FC935F05436257CBBC75DCA6ECFB15E0E00D659B812858F3F3C1CE2DC"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UWPApp1
{
    partial class AppShell : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_Controls_Primitives_ToggleButton_IsChecked(global::Windows.UI.Xaml.Controls.Primitives.ToggleButton obj, global::System.Nullable<global::System.Boolean> value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Boolean) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Boolean), targetNullValue);
                }
                obj.IsChecked = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Control_IsEnabled(global::Windows.UI.Xaml.Controls.Control obj, global::System.Boolean value)
            {
                obj.IsEnabled = value;
            }
            public static void Set_Windows_UI_Xaml_FrameworkElement_Width(global::Windows.UI.Xaml.FrameworkElement obj, global::System.Double value)
            {
                obj.Width = value;
            }
            public static void Set_Windows_UI_Xaml_FrameworkElement_HorizontalAlignment(global::Windows.UI.Xaml.FrameworkElement obj, global::Windows.UI.Xaml.HorizontalAlignment value)
            {
                obj.HorizontalAlignment = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class AppShell_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IAppShell_Bindings
        {
            private global::UWPApp1.AppShell dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.Primitives.ToggleButton obj3;
            private global::Windows.UI.Xaml.Controls.Button obj5;
            private global::Windows.UI.Xaml.Controls.Button obj6;
            private global::Windows.UI.Xaml.Controls.Button obj7;
            private global::Windows.UI.Xaml.Controls.Button obj8;

            // Fields for each event bindings event handler.
            private global::Windows.UI.Xaml.RoutedEventHandler obj5Click;
            private global::Windows.UI.Xaml.RoutedEventHandler obj6Click;
            private global::Windows.UI.Xaml.RoutedEventHandler obj7Click;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj3IsCheckedDisabled = false;
            private static bool isobj5IsEnabledDisabled = false;
            private static bool isobj5WidthDisabled = false;
            private static bool isobj5HorizontalAlignmentDisabled = false;
            private static bool isobj6WidthDisabled = false;
            private static bool isobj6HorizontalAlignmentDisabled = false;
            private static bool isobj7WidthDisabled = false;
            private static bool isobj7HorizontalAlignmentDisabled = false;
            private static bool isobj8WidthDisabled = false;
            private static bool isobj8HorizontalAlignmentDisabled = false;

            private AppShell_obj1_BindingsTracking bindingsTracking;

            public AppShell_obj1_Bindings()
            {
                this.bindingsTracking = new AppShell_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 84 && columnNumber == 23)
                {
                    isobj3IsCheckedDisabled = true;
                }
                else if (lineNumber == 44 && columnNumber == 33)
                {
                    isobj5IsEnabledDisabled = true;
                }
                else if (lineNumber == 45 && columnNumber == 33)
                {
                    isobj5WidthDisabled = true;
                }
                else if (lineNumber == 46 && columnNumber == 33)
                {
                    isobj5HorizontalAlignmentDisabled = true;
                }
                else if (lineNumber == 47 && columnNumber == 33)
                {
                    this.obj5.Click -= obj5Click;
                }
                else if (lineNumber == 52 && columnNumber == 33)
                {
                    isobj6WidthDisabled = true;
                }
                else if (lineNumber == 53 && columnNumber == 33)
                {
                    isobj6HorizontalAlignmentDisabled = true;
                }
                else if (lineNumber == 54 && columnNumber == 33)
                {
                    this.obj6.Click -= obj6Click;
                }
                else if (lineNumber == 57 && columnNumber == 33)
                {
                    isobj7WidthDisabled = true;
                }
                else if (lineNumber == 58 && columnNumber == 33)
                {
                    isobj7HorizontalAlignmentDisabled = true;
                }
                else if (lineNumber == 59 && columnNumber == 33)
                {
                    this.obj7.Click -= obj7Click;
                }
                else if (lineNumber == 64 && columnNumber == 33)
                {
                    isobj8WidthDisabled = true;
                }
                else if (lineNumber == 65 && columnNumber == 33)
                {
                    isobj8HorizontalAlignmentDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 3: // AppShell.xaml line 82
                        this.obj3 = (global::Windows.UI.Xaml.Controls.Primitives.ToggleButton)target;
                        this.bindingsTracking.RegisterTwoWayListener_3(this.obj3);
                        break;
                    case 5: // AppShell.xaml line 43
                        this.obj5 = (global::Windows.UI.Xaml.Controls.Button)target;
                        this.obj5Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.BackButton_Click(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.Button)target).Click += obj5Click;
                        break;
                    case 6: // AppShell.xaml line 50
                        this.obj6 = (global::Windows.UI.Xaml.Controls.Button)target;
                        this.obj6Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.GoToHomePage();
                        };
                        ((global::Windows.UI.Xaml.Controls.Button)target).Click += obj6Click;
                        break;
                    case 7: // AppShell.xaml line 55
                        this.obj7 = (global::Windows.UI.Xaml.Controls.Button)target;
                        this.obj7Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.GoToEditPage();
                        };
                        ((global::Windows.UI.Xaml.Controls.Button)target).Click += obj7Click;
                        break;
                    case 8: // AppShell.xaml line 62
                        this.obj8 = (global::Windows.UI.Xaml.Controls.Button)target;
                        break;
                    default:
                        break;
                }
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // IAppShell_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::UWPApp1.AppShell)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::UWPApp1.AppShell obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_RootSplitView(obj.RootSplitView, phase);
                        this.Update_AppFrame(obj.AppFrame, phase);
                        this.Update_NavMenuList(obj.NavMenuList, phase);
                    }
                }
            }
            private void Update_RootSplitView(global::Windows.UI.Xaml.Controls.SplitView obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_RootSplitView(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_RootSplitView_IsPaneOpen(obj.IsPaneOpen, phase);
                    }
                }
            }
            private void Update_RootSplitView_IsPaneOpen(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // AppShell.xaml line 82
                    if (!isobj3IsCheckedDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ToggleButton_IsChecked(this.obj3, (global::System.Nullable<global::System.Boolean>)this.LookupConverter("boolConverter").Convert(obj, typeof(global::System.Nullable<global::System.Boolean>), null, null), null);
                    }
                }
            }
            private void Update_AppFrame(global::Windows.UI.Xaml.Controls.Frame obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_AppFrame(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_AppFrame_CanGoBack(obj.CanGoBack, phase);
                    }
                }
            }
            private void Update_AppFrame_CanGoBack(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // AppShell.xaml line 43
                    if (!isobj5IsEnabledDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_IsEnabled(this.obj5, obj);
                    }
                }
            }
            private void Update_NavMenuList(global::Windows.UI.Xaml.Controls.ListView obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_NavMenuList(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_NavMenuList_Width(obj.Width, phase);
                        this.Update_NavMenuList_HorizontalAlignment(obj.HorizontalAlignment, phase);
                    }
                }
            }
            private void Update_NavMenuList_Width(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // AppShell.xaml line 43
                    if (!isobj5WidthDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_Width(this.obj5, obj);
                    }
                }
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // AppShell.xaml line 50
                    if (!isobj6WidthDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_Width(this.obj6, obj);
                    }
                    // AppShell.xaml line 55
                    if (!isobj7WidthDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_Width(this.obj7, obj);
                    }
                    // AppShell.xaml line 62
                    if (!isobj8WidthDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_Width(this.obj8, obj);
                    }
                }
            }
            private void Update_NavMenuList_HorizontalAlignment(global::Windows.UI.Xaml.HorizontalAlignment obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // AppShell.xaml line 43
                    if (!isobj5HorizontalAlignmentDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_HorizontalAlignment(this.obj5, obj);
                    }
                }
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // AppShell.xaml line 50
                    if (!isobj6HorizontalAlignmentDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_HorizontalAlignment(this.obj6, obj);
                    }
                    // AppShell.xaml line 55
                    if (!isobj7HorizontalAlignmentDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_HorizontalAlignment(this.obj7, obj);
                    }
                    // AppShell.xaml line 62
                    if (!isobj8HorizontalAlignmentDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_HorizontalAlignment(this.obj8, obj);
                    }
                }
            }
            private void UpdateTwoWay_3_IsChecked()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.RootSplitView != null)
                        {
                            this.dataRoot.RootSplitView.IsPaneOpen = (global::System.Boolean)this.LookupConverter("boolConverter").ConvertBack(this.obj3.IsChecked, typeof(global::System.Boolean), null, null);
                        }
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 0.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class AppShell_obj1_BindingsTracking
            {
                private global::System.WeakReference<AppShell_obj1_Bindings> weakRefToBindingObj; 

                public AppShell_obj1_BindingsTracking(AppShell_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<AppShell_obj1_Bindings>(obj);
                }

                public AppShell_obj1_Bindings TryGetBindingObject()
                {
                    AppShell_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_RootSplitView(null);
                    UpdateChildListeners_AppFrame(null);
                    UpdateChildListeners_NavMenuList(null);
                }

                public void DependencyPropertyChanged_RootSplitView_IsPaneOpen(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    AppShell_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Windows.UI.Xaml.Controls.SplitView obj = sender as global::Windows.UI.Xaml.Controls.SplitView;
                        if (obj != null)
                        {
                            bindings.Update_RootSplitView_IsPaneOpen(obj.IsPaneOpen, DATA_CHANGED);
                        }
                    }
                }
                private global::Windows.UI.Xaml.Controls.SplitView cache_RootSplitView = null;
                private long tokenDPC_RootSplitView_IsPaneOpen = 0;
                public void UpdateChildListeners_RootSplitView(global::Windows.UI.Xaml.Controls.SplitView obj)
                {
                    if (obj != cache_RootSplitView)
                    {
                        if (cache_RootSplitView != null)
                        {
                            cache_RootSplitView.UnregisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.SplitView.IsPaneOpenProperty, tokenDPC_RootSplitView_IsPaneOpen);
                            cache_RootSplitView = null;
                        }
                        if (obj != null)
                        {
                            cache_RootSplitView = obj;
                            tokenDPC_RootSplitView_IsPaneOpen = obj.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.SplitView.IsPaneOpenProperty, DependencyPropertyChanged_RootSplitView_IsPaneOpen);
                        }
                    }
                }
                public void DependencyPropertyChanged_AppFrame_CanGoBack(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    AppShell_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Windows.UI.Xaml.Controls.Frame obj = sender as global::Windows.UI.Xaml.Controls.Frame;
                        if (obj != null)
                        {
                            bindings.Update_AppFrame_CanGoBack(obj.CanGoBack, DATA_CHANGED);
                        }
                    }
                }
                private global::Windows.UI.Xaml.Controls.Frame cache_AppFrame = null;
                private long tokenDPC_AppFrame_CanGoBack = 0;
                public void UpdateChildListeners_AppFrame(global::Windows.UI.Xaml.Controls.Frame obj)
                {
                    if (obj != cache_AppFrame)
                    {
                        if (cache_AppFrame != null)
                        {
                            cache_AppFrame.UnregisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Frame.CanGoBackProperty, tokenDPC_AppFrame_CanGoBack);
                            cache_AppFrame = null;
                        }
                        if (obj != null)
                        {
                            cache_AppFrame = obj;
                            tokenDPC_AppFrame_CanGoBack = obj.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Frame.CanGoBackProperty, DependencyPropertyChanged_AppFrame_CanGoBack);
                        }
                    }
                }
                public void DependencyPropertyChanged_NavMenuList_Width(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    AppShell_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Windows.UI.Xaml.Controls.ListView obj = sender as global::Windows.UI.Xaml.Controls.ListView;
                        if (obj != null)
                        {
                            bindings.Update_NavMenuList_Width(obj.Width, DATA_CHANGED);
                        }
                    }
                }
                public void DependencyPropertyChanged_NavMenuList_HorizontalAlignment(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    AppShell_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Windows.UI.Xaml.Controls.ListView obj = sender as global::Windows.UI.Xaml.Controls.ListView;
                        if (obj != null)
                        {
                            bindings.Update_NavMenuList_HorizontalAlignment(obj.HorizontalAlignment, DATA_CHANGED);
                        }
                    }
                }
                private global::Windows.UI.Xaml.Controls.ListView cache_NavMenuList = null;
                private long tokenDPC_NavMenuList_Width = 0;
                private long tokenDPC_NavMenuList_HorizontalAlignment = 0;
                public void UpdateChildListeners_NavMenuList(global::Windows.UI.Xaml.Controls.ListView obj)
                {
                    if (obj != cache_NavMenuList)
                    {
                        if (cache_NavMenuList != null)
                        {
                            cache_NavMenuList.UnregisterPropertyChangedCallback(global::Windows.UI.Xaml.FrameworkElement.WidthProperty, tokenDPC_NavMenuList_Width);
                            cache_NavMenuList.UnregisterPropertyChangedCallback(global::Windows.UI.Xaml.FrameworkElement.HorizontalAlignmentProperty, tokenDPC_NavMenuList_HorizontalAlignment);
                            cache_NavMenuList = null;
                        }
                        if (obj != null)
                        {
                            cache_NavMenuList = obj;
                            tokenDPC_NavMenuList_Width = obj.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.FrameworkElement.WidthProperty, DependencyPropertyChanged_NavMenuList_Width);
                            tokenDPC_NavMenuList_HorizontalAlignment = obj.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.FrameworkElement.HorizontalAlignmentProperty, DependencyPropertyChanged_NavMenuList_HorizontalAlignment);
                        }
                    }
                }
                public void RegisterTwoWayListener_3(global::Windows.UI.Xaml.Controls.Primitives.ToggleButton sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.ToggleButton.IsCheckedProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_3_IsChecked();
                        }
                    });
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2: // AppShell.xaml line 36
                {
                    this.RootSplitView = (global::Windows.UI.Xaml.Controls.SplitView)(target);
                }
                break;
            case 3: // AppShell.xaml line 82
                {
                    this.TogglePaneButton = (global::Windows.UI.Xaml.Controls.Primitives.ToggleButton)(target);
                    ((global::Windows.UI.Xaml.Controls.Primitives.ToggleButton)this.TogglePaneButton).Unchecked += this.HamburgerMenu_Unchecked;
                }
                break;
            case 4: // AppShell.xaml line 41
                {
                    this.NavMenuList = (global::Windows.UI.Xaml.Controls.ListView)(target);
                }
                break;
            case 5: // AppShell.xaml line 43
                {
                    this.BackButton = (global::Windows.UI.Xaml.Controls.Button)(target);
                }
                break;
            case 6: // AppShell.xaml line 50
                {
                    this.HomeButton = (global::Windows.UI.Xaml.Controls.Button)(target);
                }
                break;
            case 7: // AppShell.xaml line 55
                {
                    this.EditButton = (global::Windows.UI.Xaml.Controls.Button)(target);
                }
                break;
            case 8: // AppShell.xaml line 62
                {
                    this.SettingsButton = (global::Windows.UI.Xaml.Controls.Button)(target);
                }
                break;
            case 9: // AppShell.xaml line 69
                {
                    this.frame = (global::Windows.UI.Xaml.Controls.Frame)(target);
                    ((global::Windows.UI.Xaml.Controls.Frame)this.frame).Navigating += this.OnNavigatingToPage;
                    ((global::Windows.UI.Xaml.Controls.Frame)this.frame).Navigated += this.OnNavigatedToPage;
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // AppShell.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)target;
                    AppShell_obj1_Bindings bindings = new AppShell_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    bindings.SetConverterLookupRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

